const express = require('express');
const app = express();

app.use(express.json());

// Addition endpoint
app.post('/add', (req, res) => {
  const { num1, num2 } = req.body;
  if (isNaN(num1) || isNaN(num2)) {
    return res.status(400).json({ error: 'Invalid input parameters' });
  }
  const result = Number(num1) + Number(num2);
  res.json({ result });
});

// Subtraction endpoint
app.post('/subtract', (req, res) => {
  const { num1, num2 } = req.body;
  if (isNaN(num1) || isNaN(num2)) {
    return res.status(400).json({ error: 'Invalid input parameters' });
  }
  const result = Number(num1) - Number(num2);
  res.json({ result });
});

// Multiplication endpoint
app.post('/multiply', (req, res) => {
  const { num1, num2 } = req.body;
  if (isNaN(num1) || isNaN(num2)) {
    return res.status(400).json({ error: 'Invalid input parameters' });
  }
  const result = Number(num1) * Number(num2);
  res.json({ result });
});

// Division endpoint
app.post('/divide', (req, res) => {
  const { num1, num2 } = req.body;
  if (isNaN(num1) || isNaN(num2)) {
    return res.status(400).json({ error: 'Invalid input parameters' });
  }
  if (num2 === 0) {
    return res.status(400).json({ error: 'Cannot divide' });
  }
  const result = Number(num1) / Number(num2);
  res.json({ result });
});
// Error handling middleware
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).json({ error: 'Internal server error' });
  });
  
  app.listen(3000, () => {
    console.log('Server started on port 3000');
  });
  // create a new logger object
  const winston = require('winston');
const logger = winston.createLogger({
 level: 'info',
 format: winston.format.json(),
 defaultMeta: { service: 'calculator-microservice' },
 transports: [
 new winston.transports.Console({
 format: winston.format.simple(),
 }),
 new winston.transports.File({ filename: 'logs/error.log', level: 'error' }),
 new winston.transports.File({ filename: 'logs/combined.log' }),
 ],
});
